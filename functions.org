#+TITLE: Custom functions

* org-babel-load-files
  #+BEGIN_SRC emacs-lisp
    (defun org-babel-load-files (files)
        (let* ((path "~/.emacs.d/"))
          (mapcar (lambda (file-name)
                    (org-babel-load-file (concat path file-name ".org")))
                  files)))
  #+END_SRC
* insert-current-date
#+BEGIN_SRC emacs-lisp
  (defun insert-current-date ()
    (interactive)
    (insert (format-time-string "%Y-%m-%d")))
#+END_SRC
* add-to-multiple-hooks
#+BEGIN_SRC emacs-lisp
  (defun add-to-multiple-hooks (function hooks)
    "Take a mode and add it to multiple hooks"
    (mapc (lambda (hook)
      (add-hook hook function)) hooks))'
#+END_SRC

* find-user-init-file
#+BEGIN_SRC emacs-lisp
  (defun find-user-init-file ()
    "Edit your .emacs file instantly."
    (interactive)
    (find-file user-init-file))
#+END_SRC

* indent-buffer
#+BEGIN_SRC emacs-lisp
  (defun indent-buffer ()
    (interactive)
    (save-excursion
      (indent-region (point-min) (point-max) nil)))
#+END_SRC

* name-current-mode
#+BEGIN_SRC emacs-lisp
  (defun current-mode-name (&optional buffer-or-string)
    "Returns the major mode associated with a buffer"
    (interactive)
    (message (symbol-name (buffer-local-value
                           'major-mode
                           (if buffer-or-string
                               (get-buffer buffer-or-string)
                             (current-buffer))))))
#+END_SRC
* load-host-specific-conf
#+BEGIN_SRC emacs-lisp
  (defun load-host-specific-conf ()
    (let ((load-if-exists (lambda (name)
                            (if (file-exists-p name)
                                (org-babel-load-file name)))))
      (funcall load-if-exists (concat "~/.emacs.d/" system-name ".org"))))
#+END_SRC
* Emacs spreadsheet
** ses-insert-date
#+BEGIN_SRC emacs-lisp
  (defun ses-insert-date ()
    (interactive)
    (let* ((date (format-time-string "%Y-%m-%d"))
           (sym (ses-sym-rowcol ses--curcell))
           (row (car sym))
           (col (cdr sym)))
      (ses-set-cell row col 'value date)
      (ses-set-cell row col 'formula date)
      (ses-set-cell row col 'printer nil)
      (ses-print-cell row col)
      (ses-write-cells)))
#+END_SRC
