#+TITLE Packages

* Package archives
#+begin_src emacs-lisp
  (setq package-archives
	'(("gnu"         . "http://elpa.gnu.org/packages/")
	  ("org"         . "http://orgmode.org/elpa/")
	  ("melpa"       . "http://melpa.org/packages/")))
  (package-initialize)
#+end_src

* Installing packages
** Define function =install-packages=
  Simplify the installation of lists of packages.
#+begin_src emacs-lisp
  (require 'seq) ; Ensure the seq library is loaded
  (defun install-packages (packages)
      (let ((not-installed (seq-filter (lambda (package) 
					  (not (package-installed-p package)))
					packages)))
	(if not-installed
	    (if (y-or-n-p (format "there are %d packages to be installed. install them? "
				  (length not-installed)))
		(progn (package-refresh-contents)
		       (dolist (package not-installed)
			 (package-install package)))))))
#+end_src

** General purpose packages
#+begin_src emacs-lisp
  (install-packages '(
                      ace-jump-mode
                      ack
                      darkroom
                      expand-region
                      helm
                      htmlize
                      highlight-symbol
                      markdown-mode
                      undo-tree
                      use-package
                      wc-mode
                      yaml-mode
                      yasnippet
                      ))
#+end_src
* Initialization
** General purpose
#+begin_src emacs-lisp
  (require 'use-package)
  (require 'ace-jump-mode)
  (require 'expand-region)
  (require 'highlight-symbol)
  (require 'wc-mode)

  (require 'undo-tree)
  (global-undo-tree-mode t)

  (require 'yasnippet)
  (yas-global-mode t)
#+end_src
